{"remainingRequest":"D:\\Cbes\\SICREM\\node_modules\\babel-loader\\lib\\index.js!D:\\Cbes\\SICREM\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Cbes\\SICREM\\src\\store\\modules\\ships\\radioCoverages\\mutations.js","dependencies":[{"path":"D:\\Cbes\\SICREM\\src\\store\\modules\\ships\\radioCoverages\\mutations.js","mtime":1640625659799},{"path":"D:\\Cbes\\SICREM\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Cbes\\SICREM\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Cbes\\SICREM\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9TRVRfQ0hFQ0tFRFNfUlRDJExPQTsKCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9CgpmdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7IHJldHVybiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5KGFycikgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFycikgfHwgX25vbkl0ZXJhYmxlU3ByZWFkKCk7IH0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIik7IH0KCmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gInN0cmluZyIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSAiT2JqZWN0IiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gIk1hcCIgfHwgbiA9PT0gIlNldCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gIkFyZ3VtZW50cyIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHsgaWYgKHR5cGVvZiBTeW1ib2wgIT09ICJ1bmRlZmluZWQiICYmIFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpOyB9CgpmdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShhcnIpOyB9CgpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0KCmltcG9ydCB7IGdldERlZmF1bHRTdGF0ZSwgZ2V0RGVmYXVsdEZpZWxkc1ZhbHVlcyB9IGZyb20gIi4vZGVmYXVsdFN0YXRlIjsKZXhwb3J0IHZhciBTRVRfQ0hFQ0tFRFNfUlRDID0gJ1NFVF9DSEVDS0VEU19SVEMnOwpleHBvcnQgdmFyIExPQURfQ0hFQ0tFRFNfUlRDID0gJ0xPQURfQ0hFQ0tFRFNfUlRDJzsKZXhwb3J0IHZhciBSRVNFVF9DSEVDS0VEU19SVEMgPSAnUkVTRVRfQ0hFQ0tFRFNfUlRDJzsKZXhwb3J0IHZhciBSRVNFVF9SVENfRklFTERTID0gJ1JFU0VUX1JUQ19GSUVMRFMnOwpleHBvcnQgdmFyIFJFU0VUX1JUQ19TVEFURSA9ICdSRVNFVF9SVENfU1RBVEUnOwpleHBvcnQgZGVmYXVsdCAoX1NFVF9DSEVDS0VEU19SVEMkTE9BID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfU0VUX0NIRUNLRURTX1JUQyRMT0EsIFNFVF9DSEVDS0VEU19SVEMsIGZ1bmN0aW9uIChfcmVmLCBwYXlsb2FkKSB7CiAgdmFyIGNoZWNrZWRSdGNzID0gX3JlZi5jaGVja2VkUnRjczsKICB2YXIgaW5kZXggPSBjaGVja2VkUnRjcy5maW5kSW5kZXgoZnVuY3Rpb24gKHJ0YykgewogICAgcmV0dXJuIHJ0Yy5uYW1lID09PSBwYXlsb2FkLm5hbWU7CiAgfSk7CiAgaW5kZXggPCAwID8gY2hlY2tlZFJ0Y3MucHVzaChwYXlsb2FkKSA6IGNoZWNrZWRSdGNzLnNwbGljZShpbmRleCwgMSk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX1NFVF9DSEVDS0VEU19SVEMkTE9BLCBMT0FEX0NIRUNLRURTX1JUQywgZnVuY3Rpb24gKF9yZWYyKSB7CiAgdmFyIF9yZWYyJGNoZWNrZWRSdGNzID0gX3JlZjIuY2hlY2tlZFJ0Y3MsCiAgICAgIGNoZWNrZWRSdGNzID0gX3JlZjIkY2hlY2tlZFJ0Y3MgPT09IHZvaWQgMCA/IFtdIDogX3JlZjIkY2hlY2tlZFJ0Y3M7CiAgdmFyIHBheWxvYWQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IFtdOwogIGNoZWNrZWRSdGNzLnB1c2guYXBwbHkoY2hlY2tlZFJ0Y3MsIF90b0NvbnN1bWFibGVBcnJheShwYXlsb2FkKSk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX1NFVF9DSEVDS0VEU19SVEMkTE9BLCBSRVNFVF9DSEVDS0VEU19SVEMsIGZ1bmN0aW9uIChfcmVmMykgewogIHZhciBjaGVja2VkUnRjcyA9IF9yZWYzLmNoZWNrZWRSdGNzOwogIGNoZWNrZWRSdGNzLmxlbmd0aCA9IDA7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX1NFVF9DSEVDS0VEU19SVEMkTE9BLCBSRVNFVF9SVENfRklFTERTLCBmdW5jdGlvbiAoc3RhdGUpIHsKICBzdGF0ZS5yYWRpb0NvdmVyYWdlc0xpc3QgPSBnZXREZWZhdWx0RmllbGRzVmFsdWVzKCk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX1NFVF9DSEVDS0VEU19SVEMkTE9BLCBSRVNFVF9SVENfU1RBVEUsIGZ1bmN0aW9uIChzdGF0ZSkgewogIE9iamVjdC5hc3NpZ24oc3RhdGUsIGdldERlZmF1bHRTdGF0ZSgpKTsKfSksIF9TRVRfQ0hFQ0tFRFNfUlRDJExPQSk7"},{"version":3,"sources":["D:/Cbes/SICREM/src/store/modules/ships/radioCoverages/mutations.js"],"names":["getDefaultState","getDefaultFieldsValues","SET_CHECKEDS_RTC","LOAD_CHECKEDS_RTC","RESET_CHECKEDS_RTC","RESET_RTC_FIELDS","RESET_RTC_STATE","payload","checkedRtcs","index","findIndex","rtc","name","push","splice","length","state","radioCoveragesList","Object","assign"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,eAAT,EAA0BC,sBAA1B;AAEA,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,mFACEJ,gBADF,kBACqCK,OADrC,EAC8C;AAAA,MAAxBC,WAAwB,QAAxBA,WAAwB;AAC5C,MAAMC,KAAK,GAAGD,WAAW,CAACE,SAAZ,CAAsB,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,KAAaL,OAAO,CAACK,IAAzB;AAAA,GAAzB,CAAd;AACAH,EAAAA,KAAK,GAAG,CAAR,GAAYD,WAAW,CAACK,IAAZ,CAAiBN,OAAjB,CAAZ,GAAwCC,WAAW,CAACM,MAAZ,CAAmBL,KAAnB,EAA0B,CAA1B,CAAxC;AACA,CAJF,0CAKEN,iBALF,mBAKyD;AAAA,gCAAlCK,WAAkC;AAAA,MAAlCA,WAAkC,kCAApB,EAAoB;AAAA,MAAdD,OAAc,uEAAJ,EAAI;AACvDC,EAAAA,WAAW,CAACK,IAAZ,OAAAL,WAAW,qBAASD,OAAT,EAAX;AACA,CAPF,0CAQEH,kBARF,mBAQuC;AAAA,MAAfI,WAAe,SAAfA,WAAe;AACrCA,EAAAA,WAAW,CAACO,MAAZ,GAAqB,CAArB;AACA,CAVF,0CAWEV,gBAXF,YAWoBW,KAXpB,EAW2B;AACzBA,EAAAA,KAAK,CAACC,kBAAN,GAA2BhB,sBAAsB,EAAjD;AACA,CAbF,0CAcEK,eAdF,YAcmBU,KAdnB,EAc0B;AACxBE,EAAAA,MAAM,CAACC,MAAP,CAAcH,KAAd,EAAqBhB,eAAe,EAApC;AACA,CAhBF","sourcesContent":["import { getDefaultState, getDefaultFieldsValues } from './defaultState'\r\n\r\nexport const SET_CHECKEDS_RTC = 'SET_CHECKEDS_RTC'\r\nexport const LOAD_CHECKEDS_RTC = 'LOAD_CHECKEDS_RTC'\r\nexport const RESET_CHECKEDS_RTC = 'RESET_CHECKEDS_RTC'\r\nexport const RESET_RTC_FIELDS = 'RESET_RTC_FIELDS'\r\nexport const RESET_RTC_STATE = 'RESET_RTC_STATE'\r\n\r\nexport default {\r\n\t[SET_CHECKEDS_RTC]({ checkedRtcs }, payload) {\r\n\t\tconst index = checkedRtcs.findIndex(rtc => rtc.name === payload.name)\r\n\t\tindex < 0 ? checkedRtcs.push(payload) : checkedRtcs.splice(index, 1)\r\n\t},\r\n\t[LOAD_CHECKEDS_RTC]({ checkedRtcs = [] }, payload = []) {\r\n\t\tcheckedRtcs.push(...payload)\r\n\t},\r\n\t[RESET_CHECKEDS_RTC]({ checkedRtcs }) {\r\n\t\tcheckedRtcs.length = 0\r\n\t},\r\n\t[RESET_RTC_FIELDS](state) {\r\n\t\tstate.radioCoveragesList = getDefaultFieldsValues()\r\n\t},\r\n\t[RESET_RTC_STATE](state) {\r\n\t\tObject.assign(state, getDefaultState())\r\n\t}\r\n}\r\n"]}]}