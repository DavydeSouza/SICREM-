{"remainingRequest":"D:\\Cbes\\SICREM\\node_modules\\thread-loader\\dist\\cjs.js!D:\\Cbes\\SICREM\\node_modules\\babel-loader\\lib\\index.js!D:\\Cbes\\SICREM\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Cbes\\SICREM\\src\\store\\modules\\clients\\actions.js","dependencies":[{"path":"D:\\Cbes\\SICREM\\src\\store\\modules\\clients\\actions.js","mtime":1644941480750},{"path":"D:\\Cbes\\SICREM\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Cbes\\SICREM\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Cbes\\SICREM\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Cbes\\SICREM\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/Cbes/SICREM/src/store/modules/clients/actions.js"],"names":["users","usersService","company","companyService","setClientField","context","payload","valule","undefined","field","commit","toUpperCase","value","setClientContacts","getClientsByName","length","setTimeout","findByName","resp","data","id","name","getClient","type","content","loadClients","dispatch","getClients","commitUsers","console","log","loadUsersByField","findByField","laodClientById","findById","contacts","Error","laodUserToEdit","findToEdit","user","laodClientToEdit","findToEditByCbesId","shipowner","inactiveCliente","level","inactive","status","resetClientState","resetClients","removeCliente","delete","msg","total","parseInt"],"mappings":"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","sourcesContent":["import { users as usersService } from '@/services/users'\r\nimport { company as companyService } from '@/services/company'\r\n\r\nexport default {\r\n\tsetClientField(context, payload = { valule: undefined, field: '' }) {\r\n\t\tconst field = payload.field\r\n\t\tcontext.commit(`SET_CLIENT_${field.toUpperCase()}`, payload.value)\r\n\t},\r\n\tsetClientContacts({ commit }, payload) {\r\n\t\tcommit('SET_CLIENT_CONTACTS', payload)\r\n\t},\r\n\tgetClientsByName({ commit }, payload) {\r\n\t\tif (payload.length > 2) {\r\n\t\t\tsetTimeout(async () => {\r\n\t\t\t\tconst resp = await usersService.findByName(payload)\r\n\t\t\t\tconst data = resp.data.length ? resp.data : [{ id: '', name: payload }]\r\n\t\t\t\tcommit('SET_CLIENTS', data)\r\n\t\t\t}, 400)\r\n\t\t}\r\n\t},\r\n\tgetClient({ commit }, payload) {\r\n\t\tif (payload.value.length > 2) {\r\n\t\t\tsetTimeout(async () => {\r\n\t\t\t\tconst resp = await companyService.getClient(payload.type, payload.value)\r\n\t\t\t\tconst data = resp.data.length ? resp.data : []\r\n\t\t\t\tcommit('SET_CLIENTS', { content: data })\r\n\t\t\t}, 0)\r\n\t\t}\r\n\t},\r\n\tasync loadClients({ commit, dispatch }, payload) {\r\n\t\ttry {\r\n\t\t\tdispatch('setLoadingTrue')\r\n\t\t\tconst { data } = await usersService.getClients(payload)\r\n\t\t\tcommitUsers(commit, data)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t} finally {\r\n\t\t\tdispatch('setLoadingFalse')\r\n\t\t}\r\n\t},\r\n\tasync loadUsersByField({ commit, dispatch }, payload) {\r\n\t\ttry {\r\n\t\t\tdispatch('setLoadingTrue')\r\n\t\t\tconst { data } = await usersService.findByField(payload)\r\n\t\t\tcommitUsers(commit, data)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t} finally {\r\n\t\t\tdispatch('setLoadingFalse')\r\n\t\t}\r\n\t},\r\n\tasync laodClientById({ commit, dispatch }, payload) {\r\n\t\tconst { data } = await usersService.findById(payload)\r\n\t\tif (data.id) {\r\n\t\t\tcommit('SET_CLIENT', data)\r\n\t\t\tdispatch('setContacts', data.contacts)\r\n\t\t} else throw new Error('User not found!')\r\n\t},\r\n\tasync laodUserToEdit({ commit }, payload) {\r\n\t\tconst { data } = await usersService.findToEdit(payload)\r\n\t\tif (data.user) {\r\n\t\t\tcommit('SET_CLIENT', data.user)\r\n\t\t} else throw new Error('User not found!')\r\n\t},\r\n\tasync laodClientToEdit({ commit, dispatch }, payload) {\r\n\t\tconst { data } = await usersService.findToEditByCbesId(payload)\r\n\t\tif (data.user) {\r\n\t\t\tcommit('SET_CLIENT', data.user)\r\n\t\t\tdispatch('setContacts', data.user.contacts)\r\n\t\t} else throw new Error('User not found!')\r\n\r\n\t\tif (data.shipowner) {\r\n\t\t\tdispatch('setShipowner', data.shipowner)\r\n\t\t}\r\n\r\n\t\tif (data.company) {\r\n\t\t\tdispatch('setCompany', data.company)\r\n\t\t}\r\n\t},\r\n\tasync inactiveCliente({ commit }, payload) {\r\n\t\tconst { id, level } = payload\r\n\t\tconst resp = await usersService.inactive(id, { level })\r\n\t\tif (resp.status == 200) commit('INACTVE_CLIENT', payload)\r\n\t\treturn resp\r\n\t},\r\n\tresetClientState({ commit }) {\r\n\t\tcommit('RESET_CLIENT_STATE')\r\n\t},\r\n\tresetClients({ commit }) {\r\n\t\tcommit('RESET_CLIENTS')\r\n\t},\r\n\tasync removeCliente({ commit }, payload) {\r\n\t\tconst resp = await usersService.delete(payload)\r\n\t\tif (resp.status == 200) commit('INACTVE_CLIENT', payload)\r\n\t\treturn resp\r\n\t}\r\n}\r\n\r\nfunction commitUsers(commit, data) {\r\n\tconst msg = 'No result (Users)'\r\n\tif (data) {\r\n\t\tconst { content, total } = data\r\n\t\tcommit('SET_CLIENTS', { content, total: parseInt(total) })\r\n\t} else throw new Error(msg)\r\n}\r\n"]}]}