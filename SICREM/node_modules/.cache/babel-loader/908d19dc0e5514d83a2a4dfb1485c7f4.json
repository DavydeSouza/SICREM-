{"remainingRequest":"D:\\Cbes\\SICREM\\node_modules\\babel-loader\\lib\\index.js!D:\\Cbes\\SICREM\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Cbes\\SICREM\\src\\store\\modules\\scuba\\winch\\mutations.js","dependencies":[{"path":"D:\\Cbes\\SICREM\\src\\store\\modules\\scuba\\winch\\mutations.js","mtime":1637067618233},{"path":"D:\\Cbes\\SICREM\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Cbes\\SICREM\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Cbes\\SICREM\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9TRVRfV0lOQ0hfQ0FCTEUkU0VUXzsKCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9CgpmdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7IHJldHVybiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5KGFycikgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFycikgfHwgX25vbkl0ZXJhYmxlU3ByZWFkKCk7IH0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIik7IH0KCmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gInN0cmluZyIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSAiT2JqZWN0IiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gIk1hcCIgfHwgbiA9PT0gIlNldCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gIkFyZ3VtZW50cyIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHsgaWYgKHR5cGVvZiBTeW1ib2wgIT09ICJ1bmRlZmluZWQiICYmIFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpOyB9CgpmdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShhcnIpOyB9CgpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0KCmltcG9ydCB7IGdldERlZmF1bHRTdGF0ZSwgZ2V0RGVmYXVsdEZpZWxkc1ZhbHVlcyB9IGZyb20gIi4vZGVmYXVsdFN0YXRlIjsKZXhwb3J0IHZhciBTRVRfV0lOQ0hfQ0FCTEUgPSAnU0VUX1dJTkNIX0NBQkxFJzsKZXhwb3J0IHZhciBTRVRfV0lOQ0hfV09SS0xPQUQgPSAnU0VUX1dJTkNIX1dPUktMT0FEJzsKZXhwb3J0IHZhciBTRVRfV0lOQ0hfVEVTVExPQUQgPSAnU0VUX1dJTkNIX1RFU1RMT0FEJzsKZXhwb3J0IHZhciBTRVRfV0lOQ0hfTlVNQkVSID0gJ1NFVF9XSU5DSF9OVU1CRVInOwpleHBvcnQgdmFyIFNFVF9XSU5DSF9NQU5VRkFDVFVSRVIgPSAnU0VUX1dJTkNIX01BTlVGQUNUVVJFUic7CmV4cG9ydCB2YXIgU0VUX1dJTkNIX01PREVMID0gJ1NFVF9XSU5DSF9NT0RFTCc7CmV4cG9ydCB2YXIgU0VUX1dJTkNIX0RFQ0xBUkFUSU9OID0gJ1NFVF9XSU5DSF9ERUNMQVJBVElPTic7CmV4cG9ydCB2YXIgU0VUX1dJTkNIX0VYUElSQVRJT04gPSAnU0VUX1dJTkNIX0VYUElSQVRJT04nOwpleHBvcnQgdmFyIFNFVF9XSU5DSF9JU1NVRURCWSA9ICdTRVRfV0lOQ0hfSVNTVUVEQlknOwpleHBvcnQgdmFyIFNFVF9XSU5DSFMgPSAnU0VUX1dJTkNIUyc7CmV4cG9ydCB2YXIgQUREX1dJTkNIID0gJ0FERF9XSU5DSCc7CmV4cG9ydCB2YXIgRURJVF9XSU5DSCA9ICdFRElUX1dJTkNIJzsKZXhwb3J0IHZhciBSRU1PVkVfV0lOQ0ggPSAnUkVNT1ZFX1dJTkNIJzsKZXhwb3J0IHZhciBTRVRfV0lOQ0ggPSAnU0VUX1dJTkNIJzsKZXhwb3J0IHZhciBSRVNFVF9XSU5DSF9GSUVMRFMgPSAnUkVTRVRfV0lOQ0hfRklFTERTJzsKZXhwb3J0IHZhciBSRVNFVF9XSU5DSF9TVEFURSA9ICdSRVNFVF9XSU5DSF9TVEFURSc7CmV4cG9ydCBkZWZhdWx0IChfU0VUX1dJTkNIX0NBQkxFJFNFVF8gPSB7fSwgX2RlZmluZVByb3BlcnR5KF9TRVRfV0lOQ0hfQ0FCTEUkU0VUXywgU0VUX1dJTkNIX0NBQkxFLCBmdW5jdGlvbiAoX3JlZiwgcGF5bG9hZCkgewogIHZhciB3aW5jaCA9IF9yZWYud2luY2g7CiAgd2luY2guY2FibGVTcGVjaWZpY2F0aW9uID0gcGF5bG9hZDsKfSksIF9kZWZpbmVQcm9wZXJ0eShfU0VUX1dJTkNIX0NBQkxFJFNFVF8sIFNFVF9XSU5DSF9XT1JLTE9BRCwgZnVuY3Rpb24gKF9yZWYyLCBwYXlsb2FkKSB7CiAgdmFyIHdpbmNoID0gX3JlZjIud2luY2g7CiAgd2luY2gud29ya0xvYWQgPSBwYXlsb2FkOwp9KSwgX2RlZmluZVByb3BlcnR5KF9TRVRfV0lOQ0hfQ0FCTEUkU0VUXywgU0VUX1dJTkNIX1RFU1RMT0FELCBmdW5jdGlvbiAoX3JlZjMsIHBheWxvYWQpIHsKICB2YXIgd2luY2ggPSBfcmVmMy53aW5jaDsKICB3aW5jaC50ZXN0TG9hZCA9IHBheWxvYWQ7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX1NFVF9XSU5DSF9DQUJMRSRTRVRfLCBTRVRfV0lOQ0hfTlVNQkVSLCBmdW5jdGlvbiAoX3JlZjQsIHBheWxvYWQpIHsKICB2YXIgd2luY2ggPSBfcmVmNC53aW5jaDsKICB3aW5jaC5tYW51ZmFjdHVyZWQuaWROdW1iZXIgPSBwYXlsb2FkOwp9KSwgX2RlZmluZVByb3BlcnR5KF9TRVRfV0lOQ0hfQ0FCTEUkU0VUXywgU0VUX1dJTkNIX01BTlVGQUNUVVJFUiwgZnVuY3Rpb24gKF9yZWY1LCBwYXlsb2FkKSB7CiAgdmFyIHdpbmNoID0gX3JlZjUud2luY2g7CiAgd2luY2gubWFudWZhY3R1cmVkLm1hbnVmYWN0dXJlciA9IHBheWxvYWQ7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX1NFVF9XSU5DSF9DQUJMRSRTRVRfLCBTRVRfV0lOQ0hfTU9ERUwsIGZ1bmN0aW9uIChfcmVmNiwgcGF5bG9hZCkgewogIHZhciB3aW5jaCA9IF9yZWY2LndpbmNoOwogIHdpbmNoLm1hbnVmYWN0dXJlZC5tb2RlbCA9IHBheWxvYWQ7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX1NFVF9XSU5DSF9DQUJMRSRTRVRfLCBTRVRfV0lOQ0hfREVDTEFSQVRJT04sIGZ1bmN0aW9uIChfcmVmNywgcGF5bG9hZCkgewogIHZhciB3aW5jaCA9IF9yZWY3LndpbmNoOwogIHdpbmNoLmNvbmZvcm1pdHkuZGVjbGFyYXRpb25OdW1iZXIgPSBwYXlsb2FkOwp9KSwgX2RlZmluZVByb3BlcnR5KF9TRVRfV0lOQ0hfQ0FCTEUkU0VUXywgU0VUX1dJTkNIX0VYUElSQVRJT04sIGZ1bmN0aW9uIChfcmVmOCwgcGF5bG9hZCkgewogIHZhciB3aW5jaCA9IF9yZWY4LndpbmNoOwogIHdpbmNoLmNvbmZvcm1pdHkuZXhwaXJhdGlvbiA9IHBheWxvYWQ7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX1NFVF9XSU5DSF9DQUJMRSRTRVRfLCBTRVRfV0lOQ0hfSVNTVUVEQlksIGZ1bmN0aW9uIChfcmVmOSwgcGF5bG9hZCkgewogIHZhciB3aW5jaCA9IF9yZWY5LndpbmNoOwogIHdpbmNoLmNvbmZvcm1pdHkuaXNzdWVkQnkgPSBwYXlsb2FkOwp9KSwgX2RlZmluZVByb3BlcnR5KF9TRVRfV0lOQ0hfQ0FCTEUkU0VUXywgU0VUX1dJTkNIUywgZnVuY3Rpb24gKF9yZWYxMCkgewogIHZhciB3aW5jaHMgPSBfcmVmMTAud2luY2hzOwogIHZhciBwYXlsb2FkID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBbXTsKICB3aW5jaHMuc3BsaWNlKDAsIHBheWxvYWQubGVuZ3RoKTsKICB3aW5jaHMucHVzaC5hcHBseSh3aW5jaHMsIF90b0NvbnN1bWFibGVBcnJheShwYXlsb2FkKSk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX1NFVF9XSU5DSF9DQUJMRSRTRVRfLCBBRERfV0lOQ0gsIGZ1bmN0aW9uIChfcmVmMTEpIHsKICB2YXIgd2luY2hzID0gX3JlZjExLndpbmNocywKICAgICAgd2luY2ggPSBfcmVmMTEud2luY2g7CiAgd2luY2guaWQgPSBEYXRlLm5vdygpOwogIHdpbmNocy5wdXNoKHdpbmNoKTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfU0VUX1dJTkNIX0NBQkxFJFNFVF8sIEVESVRfV0lOQ0gsIGZ1bmN0aW9uIChfcmVmMTIsIHBheWxvYWQpIHsKICB2YXIgd2luY2hzID0gX3JlZjEyLndpbmNocywKICAgICAgd2luY2ggPSBfcmVmMTIud2luY2g7CiAgdmFyIGluZGV4ID0gd2luY2hzLmZpbmRJbmRleChmdW5jdGlvbiAoYykgewogICAgcmV0dXJuIGMuaWQgPT09IHdpbmNoLmlkOwogIH0pOwogIHdpbmNoLmZsYWcgPSBwYXlsb2FkOwogIHdpbmNocy5zcGxpY2UoaW5kZXgsIDEpOwogIHdpbmNocy5wdXNoKHdpbmNoKTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfU0VUX1dJTkNIX0NBQkxFJFNFVF8sIFNFVF9XSU5DSCwgZnVuY3Rpb24gKHN0YXRlLCBwYXlsb2FkKSB7CiAgdmFyIGlkID0gcGF5bG9hZC5pZCB8fCBEYXRlLm5vdygpOwogIHN0YXRlLndpbmNoID0gewogICAgaWQ6IGlkLAogICAgZmxhZzogcGF5bG9hZC5mbGFnLAogICAgbWFudWZhY3R1cmVkOiBwYXlsb2FkLm1hbnVmYWN0dXJlZCwKICAgIGNvbmZvcm1pdHk6IHBheWxvYWQuY29uZm9ybWl0eSwKICAgIGNhYmxlU3BlY2lmaWNhdGlvbjogcGF5bG9hZC53b3JrTG9hZCwKICAgIHdvcmtMb2FkOiBwYXlsb2FkLndvcmtMb2FkLAogICAgdGVzdExvYWQ6IHBheWxvYWQudGVzdExvYWQKICB9Owp9KSwgX2RlZmluZVByb3BlcnR5KF9TRVRfV0lOQ0hfQ0FCTEUkU0VUXywgUkVNT1ZFX1dJTkNILCBmdW5jdGlvbiAoX3JlZjEzLCBwYXlsb2FkKSB7CiAgdmFyIHdpbmNocyA9IF9yZWYxMy53aW5jaHM7CiAgdmFyIGluZGV4ID0gd2luY2hzLmZpbmRJbmRleChmdW5jdGlvbiAoYikgewogICAgcmV0dXJuIGIuaWQgPT09IHBheWxvYWQ7CiAgfSk7CiAgd2luY2hzLnNwbGljZShpbmRleCwgMSk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX1NFVF9XSU5DSF9DQUJMRSRTRVRfLCBSRVNFVF9XSU5DSF9TVEFURSwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgT2JqZWN0LmFzc2lnbihzdGF0ZSwgZ2V0RGVmYXVsdFN0YXRlKCkpOwp9KSwgX2RlZmluZVByb3BlcnR5KF9TRVRfV0lOQ0hfQ0FCTEUkU0VUXywgUkVTRVRfV0lOQ0hfRklFTERTLCBmdW5jdGlvbiAoc3RhdGUpIHsKICBzdGF0ZS53aW5jaCA9IGdldERlZmF1bHRGaWVsZHNWYWx1ZXMoKTsKfSksIF9TRVRfV0lOQ0hfQ0FCTEUkU0VUXyk7"},{"version":3,"sources":["D:/Cbes/SICREM/src/store/modules/scuba/winch/mutations.js"],"names":["getDefaultState","getDefaultFieldsValues","SET_WINCH_CABLE","SET_WINCH_WORKLOAD","SET_WINCH_TESTLOAD","SET_WINCH_NUMBER","SET_WINCH_MANUFACTURER","SET_WINCH_MODEL","SET_WINCH_DECLARATION","SET_WINCH_EXPIRATION","SET_WINCH_ISSUEDBY","SET_WINCHS","ADD_WINCH","EDIT_WINCH","REMOVE_WINCH","SET_WINCH","RESET_WINCH_FIELDS","RESET_WINCH_STATE","payload","winch","cableSpecification","workLoad","testLoad","manufactured","idNumber","manufacturer","model","conformity","declarationNumber","expiration","issuedBy","winchs","splice","length","push","id","Date","now","index","findIndex","c","flag","state","b","Object","assign"],"mappings":"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","sourcesContent":["import { getDefaultState, getDefaultFieldsValues } from './defaultState'\r\n\r\nexport const SET_WINCH_CABLE = 'SET_WINCH_CABLE'\r\nexport const SET_WINCH_WORKLOAD = 'SET_WINCH_WORKLOAD'\r\nexport const SET_WINCH_TESTLOAD = 'SET_WINCH_TESTLOAD'\r\nexport const SET_WINCH_NUMBER = 'SET_WINCH_NUMBER'\r\nexport const SET_WINCH_MANUFACTURER = 'SET_WINCH_MANUFACTURER'\r\nexport const SET_WINCH_MODEL = 'SET_WINCH_MODEL'\r\nexport const SET_WINCH_DECLARATION = 'SET_WINCH_DECLARATION'\r\nexport const SET_WINCH_EXPIRATION = 'SET_WINCH_EXPIRATION'\r\nexport const SET_WINCH_ISSUEDBY = 'SET_WINCH_ISSUEDBY'\r\nexport const SET_WINCHS = 'SET_WINCHS'\r\nexport const ADD_WINCH = 'ADD_WINCH'\r\nexport const EDIT_WINCH = 'EDIT_WINCH'\r\nexport const REMOVE_WINCH = 'REMOVE_WINCH'\r\nexport const SET_WINCH = 'SET_WINCH'\r\n\r\nexport const RESET_WINCH_FIELDS = 'RESET_WINCH_FIELDS'\r\nexport const RESET_WINCH_STATE = 'RESET_WINCH_STATE'\r\n\r\nexport default {\r\n\t[SET_WINCH_CABLE]({ winch }, payload) {\r\n\t\twinch.cableSpecification = payload\r\n\t},\r\n\t[SET_WINCH_WORKLOAD]({ winch }, payload) {\r\n\t\twinch.workLoad = payload\r\n\t},\r\n\t[SET_WINCH_TESTLOAD]({ winch }, payload) {\r\n\t\twinch.testLoad = payload\r\n\t},\r\n\t[SET_WINCH_NUMBER]({ winch }, payload) {\r\n\t\twinch.manufactured.idNumber = payload\r\n\t},\r\n\t[SET_WINCH_MANUFACTURER]({ winch }, payload) {\r\n\t\twinch.manufactured.manufacturer = payload\r\n\t},\r\n\t[SET_WINCH_MODEL]({ winch }, payload) {\r\n\t\twinch.manufactured.model = payload\r\n\t},\r\n\t[SET_WINCH_DECLARATION]({ winch }, payload) {\r\n\t\twinch.conformity.declarationNumber = payload\r\n\t},\r\n\t[SET_WINCH_EXPIRATION]({ winch }, payload) {\r\n\t\twinch.conformity.expiration = payload\r\n\t},\r\n\t[SET_WINCH_ISSUEDBY]({ winch }, payload) {\r\n\t\twinch.conformity.issuedBy = payload\r\n\t},\r\n\t[SET_WINCHS]({ winchs }, payload = []) {\r\n\t\twinchs.splice(0, payload.length)\r\n\t\twinchs.push(...payload)\r\n\t},\r\n\t[ADD_WINCH]({ winchs, winch }) {\r\n\t\twinch.id = Date.now()\r\n\t\twinchs.push(winch)\r\n\t},\r\n\t[EDIT_WINCH]({ winchs, winch }, payload) {\r\n\t\tconst index = winchs.findIndex(c => c.id === winch.id)\r\n\t\twinch.flag = payload\r\n\t\twinchs.splice(index, 1)\r\n\t\twinchs.push(winch)\r\n\t},\r\n\t[SET_WINCH](state, payload) {\r\n\t\tconst id = payload.id || Date.now()\r\n\t\tstate.winch = {\r\n\t\t\tid: id,\r\n\t\t\tflag: payload.flag,\r\n\t\t\tmanufactured: payload.manufactured,\r\n\t\t\tconformity: payload.conformity,\r\n\t\t\tcableSpecification: payload.workLoad,\r\n\t\t\tworkLoad: payload.workLoad,\r\n\t\t\ttestLoad: payload.testLoad\r\n\t\t}\r\n\t},\r\n\t[REMOVE_WINCH]({ winchs }, payload) {\r\n\t\tconst index = winchs.findIndex(b => b.id === payload)\r\n\t\twinchs.splice(index, 1)\r\n\t},\r\n\t[RESET_WINCH_STATE](state) {\r\n\t\tObject.assign(state, getDefaultState())\r\n\t},\r\n\t[RESET_WINCH_FIELDS](state) {\r\n\t\tstate.winch = getDefaultFieldsValues()\r\n\t}\r\n}\r\n"]}]}