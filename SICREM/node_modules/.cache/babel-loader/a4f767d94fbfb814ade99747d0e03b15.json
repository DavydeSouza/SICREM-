{"remainingRequest":"D:\\Cbes\\SICREM\\node_modules\\thread-loader\\dist\\cjs.js!D:\\Cbes\\SICREM\\node_modules\\babel-loader\\lib\\index.js!D:\\Cbes\\SICREM\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Cbes\\SICREM\\src\\store\\modules\\ships\\types\\actions.js","dependencies":[{"path":"D:\\Cbes\\SICREM\\src\\store\\modules\\ships\\types\\actions.js","mtime":1637067618251},{"path":"D:\\Cbes\\SICREM\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Cbes\\SICREM\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Cbes\\SICREM\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Cbes\\SICREM\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiRDovQ2Jlcy9TSUNSRU0vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yIjsKCmZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHsgdHJ5IHsgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpOyB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlOyB9IGNhdGNoIChlcnJvcikgeyByZWplY3QoZXJyb3IpOyByZXR1cm47IH0gaWYgKGluZm8uZG9uZSkgeyByZXNvbHZlKHZhbHVlKTsgfSBlbHNlIHsgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpOyB9IH0KCmZ1bmN0aW9uIF9hc3luY1RvR2VuZXJhdG9yKGZuKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHZhciBzZWxmID0gdGhpcywgYXJncyA9IGFyZ3VtZW50czsgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsgdmFyIGdlbiA9IGZuLmFwcGx5KHNlbGYsIGFyZ3MpOyBmdW5jdGlvbiBfbmV4dCh2YWx1ZSkgeyBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJuZXh0IiwgdmFsdWUpOyB9IGZ1bmN0aW9uIF90aHJvdyhlcnIpIHsgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCAidGhyb3ciLCBlcnIpOyB9IF9uZXh0KHVuZGVmaW5lZCk7IH0pOyB9OyB9CgppbXBvcnQgeyB0eXBlcyBhcyB0eXBlc1NlcnZpY2UgfSBmcm9tICdAL3NlcnZpY2VzL3R5cGVzJzsKZXhwb3J0IGRlZmF1bHQgewogIHNldEFsbFR5cGVzOiBmdW5jdGlvbiBzZXRBbGxUeXBlcyhjb250ZXh0KSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHR5cGVzLCBfaSwgX09iamVjdCRrZXlzLCBrZXksIHJlczsKCiAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgdHlwZXMgPSBjb250ZXh0LnN0YXRlLnR5cGVzOwogICAgICAgICAgICAgIF9pID0gMCwgX09iamVjdCRrZXlzID0gT2JqZWN0LmtleXModHlwZXMpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGlmICghKF9pIDwgX09iamVjdCRrZXlzLmxlbmd0aCkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAga2V5ID0gX09iamVjdCRrZXlzW19pXTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gdHlwZXNTZXJ2aWNlLmZpbmRBbGwoa2V5KTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIHR5cGVzW2tleV0gPSByZXMuZGF0YTsKCiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBfaSsrOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnTE9BRF9BTExfVFlQRVMnLCB0eXBlcyk7CgogICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["D:/Cbes/SICREM/src/store/modules/ships/types/actions.js"],"names":["types","typesService","setAllTypes","context","state","Object","keys","key","findAll","res","data","commit"],"mappings":";;;;;;AAAA,SAASA,KAAK,IAAIC,YAAlB,QAAsC,kBAAtC;AAEA,eAAe;AACRC,EAAAA,WADQ,uBACIC,OADJ,EACa;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACpBH,cAAAA,KADoB,GACZG,OAAO,CAACC,KAAR,CAAcJ,KADF;AAAA,qCAEVK,MAAM,CAACC,IAAP,CAAYN,KAAZ,CAFU;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEjBO,cAAAA,GAFiB;AAAA;AAAA,qBAGPN,YAAY,CAACO,OAAb,CAAqBD,GAArB,CAHO;;AAAA;AAGnBE,cAAAA,GAHmB;AAIzBT,cAAAA,KAAK,CAACO,GAAD,CAAL,GAAaE,GAAG,CAACC,IAAjB;;AAJyB;AAAA;AAAA;AAAA;;AAAA;AAM1BP,cAAAA,OAAO,CAACQ,MAAR,CAAe,gBAAf,EAAiCX,KAAjC;;AAN0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO1B;AARa,CAAf","sourcesContent":["import { types as typesService } from '@/services/types'\r\n\r\nexport default {\r\n\tasync setAllTypes(context) {\r\n\t\tconst types = context.state.types\r\n\t\tfor (var key of Object.keys(types)) {\r\n\t\t\tconst res = await typesService.findAll(key)\r\n\t\t\ttypes[key] = res.data\r\n\t\t}\r\n\t\tcontext.commit('LOAD_ALL_TYPES', types)\r\n\t}\r\n}\r\n"]}]}