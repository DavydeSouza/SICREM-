{"remainingRequest":"D:\\Cbes\\SICREM\\node_modules\\babel-loader\\lib\\index.js!D:\\Cbes\\SICREM\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Cbes\\SICREM\\src\\store\\modules\\scuba\\maskHelmet\\mutations.js","dependencies":[{"path":"D:\\Cbes\\SICREM\\src\\store\\modules\\scuba\\maskHelmet\\mutations.js","mtime":1637067618224},{"path":"D:\\Cbes\\SICREM\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Cbes\\SICREM\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Cbes\\SICREM\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9TRVRfSEVMTUVUX1RZUEUkU0VUXzsKCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9CgpmdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7IHJldHVybiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5KGFycikgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFycikgfHwgX25vbkl0ZXJhYmxlU3ByZWFkKCk7IH0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIik7IH0KCmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gInN0cmluZyIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSAiT2JqZWN0IiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gIk1hcCIgfHwgbiA9PT0gIlNldCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gIkFyZ3VtZW50cyIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHsgaWYgKHR5cGVvZiBTeW1ib2wgIT09ICJ1bmRlZmluZWQiICYmIFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpOyB9CgpmdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShhcnIpOyB9CgpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0KCmltcG9ydCB7IGdldERlZmF1bHRTdGF0ZSwgZ2V0RGVmYXVsdEZpZWxkc1ZhbHVlcyB9IGZyb20gIi4vZGVmYXVsdFN0YXRlIjsKZXhwb3J0IHZhciBTRVRfSEVMTUVUX1RZUEUgPSAnU0VUX0hFTE1FVF9UWVBFJzsKZXhwb3J0IHZhciBTRVRfSEVMTUVUX05VTUJFUiA9ICdTRVRfSEVMTUVUX05VTUJFUic7CmV4cG9ydCB2YXIgU0VUX0hFTE1FVF9NQU5VRkFDVFVSRVIgPSAnU0VUX0hFTE1FVF9NQU5VRkFDVFVSRVInOwpleHBvcnQgdmFyIFNFVF9IRUxNRVRfTU9ERUwgPSAnU0VUX0hFTE1FVF9NT0RFTCc7CmV4cG9ydCB2YXIgU0VUX0hFTE1FVFMgPSAnU0VUX0hFTE1FVFMnOwpleHBvcnQgdmFyIEFERF9IRUxNRVQgPSAnQUREX0hFTE1FVCc7CmV4cG9ydCB2YXIgRURJVF9IRUxNRVQgPSAnRURJVF9IRUxNRVQnOwpleHBvcnQgdmFyIFNFVF9IRUxNRVQgPSAnU0VUX0hFTE1FVCc7CmV4cG9ydCB2YXIgUkVNT1ZFX0hFTE1FVCA9ICdSRU1PVkVfSEVMTUVUJzsKZXhwb3J0IHZhciBSRVNFVF9IRUxNRVRfRklFTERTID0gJ1JFU0VUX0hFTE1FVF9GSUVMRFMnOwpleHBvcnQgdmFyIFJFU0VUX0hFTE1FVF9TVEFURSA9ICdSRVNFVF9IRUxNRVRfU1RBVEUnOwpleHBvcnQgZGVmYXVsdCAoX1NFVF9IRUxNRVRfVFlQRSRTRVRfID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfU0VUX0hFTE1FVF9UWVBFJFNFVF8sIFNFVF9IRUxNRVRfVFlQRSwgZnVuY3Rpb24gKF9yZWYsIHBheWxvYWQpIHsKICB2YXIgbWFza0hlbG1ldCA9IF9yZWYubWFza0hlbG1ldDsKICBtYXNrSGVsbWV0LnR5cGUgPSBwYXlsb2FkOwp9KSwgX2RlZmluZVByb3BlcnR5KF9TRVRfSEVMTUVUX1RZUEUkU0VUXywgU0VUX0hFTE1FVF9OVU1CRVIsIGZ1bmN0aW9uIChfcmVmMiwgcGF5bG9hZCkgewogIHZhciBtYXNrSGVsbWV0ID0gX3JlZjIubWFza0hlbG1ldDsKICBtYXNrSGVsbWV0Lm1hbnVmYWN0dXJlZC5pZE51bWJlciA9IHBheWxvYWQ7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX1NFVF9IRUxNRVRfVFlQRSRTRVRfLCBTRVRfSEVMTUVUX01BTlVGQUNUVVJFUiwgZnVuY3Rpb24gKF9yZWYzLCBwYXlsb2FkKSB7CiAgdmFyIG1hc2tIZWxtZXQgPSBfcmVmMy5tYXNrSGVsbWV0OwogIG1hc2tIZWxtZXQubWFudWZhY3R1cmVkLm1hbnVmYWN0dXJlciA9IHBheWxvYWQ7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX1NFVF9IRUxNRVRfVFlQRSRTRVRfLCBTRVRfSEVMTUVUX01PREVMLCBmdW5jdGlvbiAoX3JlZjQsIHBheWxvYWQpIHsKICB2YXIgbWFza0hlbG1ldCA9IF9yZWY0Lm1hc2tIZWxtZXQ7CiAgbWFza0hlbG1ldC5tYW51ZmFjdHVyZWQubW9kZWwgPSBwYXlsb2FkOwp9KSwgX2RlZmluZVByb3BlcnR5KF9TRVRfSEVMTUVUX1RZUEUkU0VUXywgU0VUX0hFTE1FVFMsIGZ1bmN0aW9uIChfcmVmNSkgewogIHZhciBtYXNrc0hlbG1ldHMgPSBfcmVmNS5tYXNrc0hlbG1ldHM7CiAgdmFyIHBheWxvYWQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IFtdOwogIG1hc2tzSGVsbWV0cy5zcGxpY2UoMCwgcGF5bG9hZC5sZW5ndGgpOwogIG1hc2tzSGVsbWV0cy5wdXNoLmFwcGx5KG1hc2tzSGVsbWV0cywgX3RvQ29uc3VtYWJsZUFycmF5KHBheWxvYWQpKTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfU0VUX0hFTE1FVF9UWVBFJFNFVF8sIEFERF9IRUxNRVQsIGZ1bmN0aW9uIChfcmVmNikgewogIHZhciBtYXNrc0hlbG1ldHMgPSBfcmVmNi5tYXNrc0hlbG1ldHMsCiAgICAgIG1hc2tIZWxtZXQgPSBfcmVmNi5tYXNrSGVsbWV0OwogIG1hc2tIZWxtZXQuaWQgPSBEYXRlLm5vdygpOwogIG1hc2tzSGVsbWV0cy5wdXNoKG1hc2tIZWxtZXQpOwp9KSwgX2RlZmluZVByb3BlcnR5KF9TRVRfSEVMTUVUX1RZUEUkU0VUXywgRURJVF9IRUxNRVQsIGZ1bmN0aW9uIChfcmVmNywgcGF5bG9hZCkgewogIHZhciBtYXNrc0hlbG1ldHMgPSBfcmVmNy5tYXNrc0hlbG1ldHMsCiAgICAgIG1hc2tIZWxtZXQgPSBfcmVmNy5tYXNrSGVsbWV0OwogIHZhciBpbmRleCA9IG1hc2tzSGVsbWV0cy5maW5kSW5kZXgoZnVuY3Rpb24gKGMpIHsKICAgIHJldHVybiBjLmlkID09PSBtYXNrSGVsbWV0LmlkOwogIH0pOwogIG1hc2tIZWxtZXQuZmxhZyA9IHBheWxvYWQ7CiAgbWFza3NIZWxtZXRzLnNwbGljZShpbmRleCwgMSk7CiAgbWFza3NIZWxtZXRzLnB1c2gobWFza0hlbG1ldCk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX1NFVF9IRUxNRVRfVFlQRSRTRVRfLCBTRVRfSEVMTUVULCBmdW5jdGlvbiAoc3RhdGUsIHBheWxvYWQpIHsKICB2YXIgaWQgPSBwYXlsb2FkLmlkIHx8IERhdGUubm93KCk7CiAgc3RhdGUubWFza0hlbG1ldCA9IHsKICAgIGlkOiBpZCwKICAgIHR5cGU6IHBheWxvYWQudHlwZSwKICAgIHByZXNzdXJlOiBwYXlsb2FkLnByZXNzdXJlLAogICAgZmxvd3JhdGU6IHBheWxvYWQuZmxvd3JhdGUsCiAgICBtYW51ZmFjdHVyZWQ6IHBheWxvYWQubWFudWZhY3R1cmVkLAogICAgZmxhZzogcGF5bG9hZC5mbGFnCiAgfTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfU0VUX0hFTE1FVF9UWVBFJFNFVF8sIFJFTU9WRV9IRUxNRVQsIGZ1bmN0aW9uIChfcmVmOCwgcGF5bG9hZCkgewogIHZhciBtYXNrc0hlbG1ldHMgPSBfcmVmOC5tYXNrc0hlbG1ldHM7CiAgdmFyIGluZGV4ID0gbWFza3NIZWxtZXRzLmZpbmRJbmRleChmdW5jdGlvbiAoYikgewogICAgcmV0dXJuIGIuaWQgPT09IHBheWxvYWQ7CiAgfSk7CiAgbWFza3NIZWxtZXRzLnNwbGljZShpbmRleCwgMSk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX1NFVF9IRUxNRVRfVFlQRSRTRVRfLCBSRVNFVF9IRUxNRVRfU1RBVEUsIGZ1bmN0aW9uIChzdGF0ZSkgewogIE9iamVjdC5hc3NpZ24oc3RhdGUsIGdldERlZmF1bHRTdGF0ZSgpKTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfU0VUX0hFTE1FVF9UWVBFJFNFVF8sIFJFU0VUX0hFTE1FVF9GSUVMRFMsIGZ1bmN0aW9uIChzdGF0ZSkgewogIHN0YXRlLm1hc2tIZWxtZXQgPSBnZXREZWZhdWx0RmllbGRzVmFsdWVzKCk7Cn0pLCBfU0VUX0hFTE1FVF9UWVBFJFNFVF8pOw=="},{"version":3,"sources":["D:/Cbes/SICREM/src/store/modules/scuba/maskHelmet/mutations.js"],"names":["getDefaultState","getDefaultFieldsValues","SET_HELMET_TYPE","SET_HELMET_NUMBER","SET_HELMET_MANUFACTURER","SET_HELMET_MODEL","SET_HELMETS","ADD_HELMET","EDIT_HELMET","SET_HELMET","REMOVE_HELMET","RESET_HELMET_FIELDS","RESET_HELMET_STATE","payload","maskHelmet","type","manufactured","idNumber","manufacturer","model","masksHelmets","splice","length","push","id","Date","now","index","findIndex","c","flag","state","pressure","flowrate","b","Object","assign"],"mappings":"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","sourcesContent":["import { getDefaultState, getDefaultFieldsValues } from './defaultState'\r\n\r\nexport const SET_HELMET_TYPE = 'SET_HELMET_TYPE'\r\nexport const SET_HELMET_NUMBER = 'SET_HELMET_NUMBER'\r\nexport const SET_HELMET_MANUFACTURER = 'SET_HELMET_MANUFACTURER'\r\nexport const SET_HELMET_MODEL = 'SET_HELMET_MODEL'\r\nexport const SET_HELMETS = 'SET_HELMETS'\r\nexport const ADD_HELMET = 'ADD_HELMET'\r\nexport const EDIT_HELMET = 'EDIT_HELMET'\r\nexport const SET_HELMET = 'SET_HELMET'\r\nexport const REMOVE_HELMET = 'REMOVE_HELMET'\r\n\r\nexport const RESET_HELMET_FIELDS = 'RESET_HELMET_FIELDS'\r\nexport const RESET_HELMET_STATE = 'RESET_HELMET_STATE'\r\n\r\nexport default {\r\n\t[SET_HELMET_TYPE]({ maskHelmet }, payload) {\r\n\t\tmaskHelmet.type = payload\r\n\t},\r\n\t[SET_HELMET_NUMBER]({ maskHelmet }, payload) {\r\n\t\tmaskHelmet.manufactured.idNumber = payload\r\n\t},\r\n\t[SET_HELMET_MANUFACTURER]({ maskHelmet }, payload) {\r\n\t\tmaskHelmet.manufactured.manufacturer = payload\r\n\t},\r\n\t[SET_HELMET_MODEL]({ maskHelmet }, payload) {\r\n\t\tmaskHelmet.manufactured.model = payload\r\n\t},\r\n\t[SET_HELMETS]({ masksHelmets }, payload = []) {\r\n\t\tmasksHelmets.splice(0, payload.length)\r\n\t\tmasksHelmets.push(...payload)\r\n\t},\r\n\t[ADD_HELMET]({ masksHelmets, maskHelmet }) {\r\n\t\tmaskHelmet.id = Date.now()\r\n\t\tmasksHelmets.push(maskHelmet)\r\n\t},\r\n\t[EDIT_HELMET]({ masksHelmets, maskHelmet }, payload) {\r\n\t\tconst index = masksHelmets.findIndex(c => c.id === maskHelmet.id)\r\n\t\tmaskHelmet.flag = payload\r\n\t\tmasksHelmets.splice(index, 1)\r\n\t\tmasksHelmets.push(maskHelmet)\r\n\t},\r\n\t[SET_HELMET](state, payload) {\r\n\t\tconst id = payload.id || Date.now()\r\n\t\tstate.maskHelmet = {\r\n\t\t\tid: id,\r\n\t\t\ttype: payload.type,\r\n\t\t\tpressure: payload.pressure,\r\n\t\t\tflowrate: payload.flowrate,\r\n\t\t\tmanufactured: payload.manufactured,\r\n\t\t\tflag: payload.flag\r\n\t\t}\r\n\t},\r\n\t[REMOVE_HELMET]({ masksHelmets }, payload) {\r\n\t\tconst index = masksHelmets.findIndex(b => b.id === payload)\r\n\t\tmasksHelmets.splice(index, 1)\r\n\t},\r\n\t[RESET_HELMET_STATE](state) {\r\n\t\tObject.assign(state, getDefaultState())\r\n\t},\r\n\t[RESET_HELMET_FIELDS](state) {\r\n\t\tstate.maskHelmet = getDefaultFieldsValues()\r\n\t}\r\n}\r\n"]}]}