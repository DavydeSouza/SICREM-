{"remainingRequest":"D:\\Cbes\\SICREM\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cbes\\SICREM\\src\\components\\views\\hyperbaricChamber\\Home.vue?vue&type=style&index=0&id=d393cbaa&lang=scss&scoped=true&","dependencies":[{"path":"D:\\Cbes\\SICREM\\src\\components\\views\\hyperbaricChamber\\Home.vue","mtime":1637067618133},{"path":"D:\\Cbes\\SICREM\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Cbes\\SICREM\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Cbes\\SICREM\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Cbes\\SICREM\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Cbes\\SICREM\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Cbes\\SICREM\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KI2hvbWUtaHlwZXJiYXJpYy1jaGFtYmVyLWNvbXBvbmVudC1jb250ZW50IHsNCgl3aWR0aDogMTAwJTsNCgloZWlnaHQ6IDEwMCU7DQoJZGlzcGxheTogZmxleDsNCglqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCglzZWN0aW9uIHsNCgkJJi5oZWFkZXIgew0KCQkJbWFyZ2luLWJvdHRvbTogMTZweDsNCgkJfQ0KCX0NCgkuZm9ybS1jb250YWluZXIgew0KCQkuY29udGVudCB7DQoJCQkuZm9ybS1yb3cgew0KCQkJCWJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjODE4MTgxNDc7DQoJCQkJLmZvcm0tZ3JvdXAgew0KCQkJCQlwYWRkaW5nLWJvdHRvbTogMTZweDsNCgkJCQkJJi5hZGQtc3lzdGVtLWl0ZW0gew0KCQkJCQkJYnV0dG9uIHsNCgkJCQkJCQl3aWR0aDogMTIwcHg7DQoJCQkJCQkJaGVpZ2h0OiAzNnB4Ow0KCQkJCQkJCWJvcmRlcjogbm9uZTsNCgkJCQkJCQlmb250LXNpemU6ICRmb250LXNpemUtaW5wdXQ7DQoJCQkJCQl9DQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCX0NCgl9DQp9DQo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/components/views/hyperbaricChamber","sourcesContent":["<template>\r\n\t<div id=\"home-hyperbaric-chamber-component-content\">\r\n\t\t<div class=\"form-container\">\r\n\t\t\t<form novalidate=\"true\" class=\"register\" @submit.prevent=\"save\">\r\n\t\t\t\t<create />\r\n\t\t\t\t<div class=\"form-row actions\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclass=\"btn-custom primary\"\r\n\t\t\t\t\t\t:disabled=\"false\"\r\n\t\t\t\t\t\t@click.stop.prevent=\"save\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCadastrar\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n// import { mapState, mapActions, mapGetters } from 'vuex'\r\n// import { certification } from '@/services/certification'\r\nimport notification from '@/mixins/notificationsMixin.js'\r\nimport Create from './Create'\r\n\r\nexport default {\r\n\tname: 'HomeHyperbalicChamber',\r\n\tcomponents: {\r\n\t\tCreate\r\n\t},\r\n\tmixins: [notification],\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tvalidate: false,\r\n\t\t\tshowContact: false,\r\n\t\t\tsubmitted: true,\r\n\t\t\tloadingSubmit: true,\r\n\t\t\tshowCompressorModal: true\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\t/* ...mapState({\r\n\t\t\tcompany_: state => state.company.company,\r\n\t\t\tcertification: state => state.certification.certification,\r\n\t\t\tcertificationSystem: state => state.certification.system,\r\n\t\t\tcompressors: state => state.compressor.compressors,\r\n\t\t\tmasksHelmets: state => state.maskHelmet.masksHelmets,\r\n\t\t\tgeneralSystemItems: state => state.generalSystemItems.generalSystemItems,\r\n\t\t\tcompressedsAirTanks: state => state.compressedAirTank.compressedsAirTanks,\r\n\t\t\tcylindersFrames: state => state.cylinderFrame.cylindersFrames,\r\n\t\t\tcomunicators: state => state.comunicator.comunicators,\r\n\t\t\tumbilicals: state => state.umbilical.umbilicals,\r\n\t\t\temergencyCylinders: state => state.emergencyCylinder.emergencyCylinders,\r\n\t\t\tcontrolPanels: state => state.controlPanel.controlPanels,\r\n\t\t\tsignets: state => state.signet.signets,\r\n\t\t\twinchs: state => state.winch.winchs,\r\n\t\t\thyperbaricsChambers: state => state.hyperbaricChamber.hyperbaricsChambers,\r\n\t\t\tbaskets: state => state.basket.baskets,\r\n\t\t\tporticos: state => state.portico.porticos\r\n\t\t}),\r\n\t\t...mapGetters(['maxDepth']),\r\n\t\tcompany: {\r\n\t\t\tget() {\r\n\t\t\t\treturn this.company_\r\n\t\t\t},\r\n\t\t\tset(value) {\r\n\t\t\t\tthis.setCompany(value)\r\n\t\t\t}\r\n\t\t},\r\n\t\tat20: {\r\n\t\t\tget() {\r\n\t\t\t\tif (this.certification) {\r\n\t\t\t\t\treturn this.maxDepth <= 20 || this.btw30and50\r\n\t\t\t\t}\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t},\r\n\t\tbtw30and50: {\r\n\t\t\tget() {\r\n\t\t\t\tif (this.certification) {\r\n\t\t\t\t\treturn this.maxDepth > 20 && this.maxDepth <= 50\r\n\t\t\t\t}\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t} */\r\n\t},\r\n\tdestroyed() {},\r\n\tmethods: {\r\n\t\t/* ...mapActions(['setCompany']),\r\n\t\tasync save() {\r\n\t\t\tthis.submitted = true\r\n\t\t\tthis.loadingSubmit = true\r\n\t\t\t//this.$v.$touch()\r\n\t\t\tif (!this.$v.$error) {\r\n\t\t\t\tif (this.$route.params.id) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst id = this.$route.params.id\r\n\t\t\t\t\t\tconst payload = await this.getData()\r\n\t\t\t\t\t\tconst resp = await certification.update(id, payload)\r\n\t\t\t\t\t\tthis.apiResponseNotification(200, resp)\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\tthis.loadingSubmit = false\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst payload = await this.getData()\r\n\t\t\t\t\t\tconst resp = await certification.create(payload)\r\n\t\t\t\t\t\tthis.apiResponseNotification(201, resp)\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\tthis.loadingSubmit = false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.loadingSubmit = false\r\n\t\t},\r\n\t\tasync getData() {\r\n\t\t\tconst certification = this.certification\r\n\t\t\tcertification.company = this.company.id\r\n\t\t\tconst {\r\n\t\t\t\tcompressors,\r\n\t\t\t\tmasksHelmets,\r\n\t\t\t\tgeneralSystemItems,\r\n\t\t\t\tcompressedsAirTanks,\r\n\t\t\t\tcylindersFrames,\r\n\t\t\t\tcomunicators,\r\n\t\t\t\tumbilicals,\r\n\t\t\t\temergencyCylinders,\r\n\t\t\t\tcontrolPanels,\r\n\t\t\t\tsignets,\r\n\t\t\t\twinchs,\r\n\t\t\t\thyperbaricsChambers,\r\n\t\t\t\tbaskets,\r\n\t\t\t\tporticos\r\n\t\t\t} = this\r\n\t\t\tconst depth = this.certificationSystem\r\n\t\t\t\t? this.certificationSystem.depth\r\n\t\t\t\t: certification.maxDepth\r\n\t\t\tconst systemId = this.certificationSystem\r\n\t\t\t\t? this.certificationSystem.id\r\n\t\t\t\t: null\r\n\t\t\tconst system = await this.sanatizeSystemItems({\r\n\t\t\t\tcompressors,\r\n\t\t\t\tmasksHelmets,\r\n\t\t\t\tgeneralSystemItems,\r\n\t\t\t\tcompressedsAirTanks,\r\n\t\t\t\tcylindersFrames,\r\n\t\t\t\tcomunicators,\r\n\t\t\t\tumbilicals,\r\n\t\t\t\temergencyCylinders,\r\n\t\t\t\tcontrolPanels,\r\n\t\t\t\tsignets,\r\n\t\t\t\twinchs,\r\n\t\t\t\thyperbaricsChambers,\r\n\t\t\t\tbaskets,\r\n\t\t\t\tporticos,\r\n\t\t\t\tdepth,\r\n\t\t\t\tid: systemId\r\n\t\t\t})\r\n\t\t\treturn { certification, system }\r\n\t\t},\r\n\t\tasync sanatizeSystemItems(system, propsToExclude = ['flag', 'id']) {\r\n\t\t\tawait Object.keys(system).forEach(key => {\r\n\t\t\t\tif (Array.isArray(system[key])) {\r\n\t\t\t\t\tconst items = system[key]\r\n\t\t\t\t\titems.forEach(item => {\r\n\t\t\t\t\t\tObject.keys(item).forEach(k => {\r\n\t\t\t\t\t\t\tif (propsToExclude.includes(k)) delete item[k]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn system\r\n\t\t} */\r\n\t}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#home-hyperbaric-chamber-component-content {\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tsection {\r\n\t\t&.header {\r\n\t\t\tmargin-bottom: 16px;\r\n\t\t}\r\n\t}\r\n\t.form-container {\r\n\t\t.content {\r\n\t\t\t.form-row {\r\n\t\t\t\tborder-bottom: 1px solid #81818147;\r\n\t\t\t\t.form-group {\r\n\t\t\t\t\tpadding-bottom: 16px;\r\n\t\t\t\t\t&.add-system-item {\r\n\t\t\t\t\t\tbutton {\r\n\t\t\t\t\t\t\twidth: 120px;\r\n\t\t\t\t\t\t\theight: 36px;\r\n\t\t\t\t\t\t\tborder: none;\r\n\t\t\t\t\t\t\tfont-size: $font-size-input;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n</style>\r\n"]}]}