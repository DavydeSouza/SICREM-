{"remainingRequest":"D:\\Cbes\\SICREM\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cbes\\SICREM\\src\\components\\views\\scuba\\company\\Company.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Cbes\\SICREM\\src\\components\\views\\scuba\\company\\Company.vue","mtime":1637067618141},{"path":"D:\\Cbes\\SICREM\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Cbes\\SICREM\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Cbes\\SICREM\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Cbes\\SICREM\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBtYXBTdGF0ZSwgbWFwQWN0aW9ucyB9IGZyb20gJ3Z1ZXgnDQppbXBvcnQgdmFsaWRhdGlvbiBmcm9tICdAL21peGlucy92YWxpZGF0aW9ucy9zY3ViYS9jb21wYW55LmpzJw0KDQpleHBvcnQgZGVmYXVsdCB7DQoJbmFtZTogJ0NvbXBhbnknLA0KCW1peGluczogW3ZhbGlkYXRpb25dLA0KCXByb3BzOiB7DQoJCWNvbXBhbnlfOiB7DQoJCQl0eXBlOiBPYmplY3QsDQoJCQlkZWZhdWx0OiBudWxsDQoJCX0NCgl9LA0KCWRhdGEoKSB7DQoJCXJldHVybiB7DQoJCQljb21wYW55OiB0aGlzLmNvbXBhbnlfDQoJCX0NCgl9LA0KCWNvbXB1dGVkOiB7DQoJCS4uLm1hcFN0YXRlKHsNCgkJCWNvbXBhbnlzOiBzdGF0ZSA9PiBzdGF0ZS5jb21wYW55LmNvbXBhbnlzDQoJCX0pDQoJfSwNCgltZXRob2RzOiB7DQoJCS4uLm1hcEFjdGlvbnMoWydnZXRDb21wYW55c0J5TmFtZScsICdzZXRDb21wYW55J10pLA0KCQlpc1ZhbGlkKCkgew0KCQkJdGhpcy4kZW1pdCgnY29tcGFueS12YWxpZGF0aW9uJywgdGhpcy4kdi4kaW52YWxpZCkNCgkJfQ0KCX0NCn0NCg=="},{"version":3,"sources":["Company.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Company.vue","sourceRoot":"src/components/views/scuba/company","sourcesContent":["<template>\r\n\t<div id=\"company-component-content\">\r\n\t\t<div class=\"form-container\">\r\n\t\t\t<form novalidate=\"true\" @submit.prevent=\"save\">\r\n\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t<div id=\"company-internal-container\">\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tid=\"company-container\"\r\n\t\t\t\t\t\t\tclass=\"form-group select-container\"\r\n\t\t\t\t\t\t\t:class=\"{ 'invalid-field': $v.company.$error }\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<label for=\"ship-type-container\">Empresa de mergulho</label>\r\n\t\t\t\t\t\t\t<v-select\r\n\t\t\t\t\t\t\t\tv-model=\"company\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Digite o nome do empresa de mergulho\"\r\n\t\t\t\t\t\t\t\ttrack-by=\"name\"\r\n\t\t\t\t\t\t\t\tlabel=\"name\"\r\n\t\t\t\t\t\t\t\t:clearable=\"false\"\r\n\t\t\t\t\t\t\t\t:options=\"companys\"\r\n\t\t\t\t\t\t\t\t:searchable=\"true\"\r\n\t\t\t\t\t\t\t\t:close-on-select=\"true\"\r\n\t\t\t\t\t\t\t\t:show-labels=\"false\"\r\n\t\t\t\t\t\t\t\t:allow-empty=\"false\"\r\n\t\t\t\t\t\t\t\t@search=\"getCompanysByName($event)\"\r\n\t\t\t\t\t\t\t\t@input=\"$emit('select-company', $event)\"\r\n\t\t\t\t\t\t\t\t@option:selected=\";[$v.company.$touch(), isValid()]\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<span slot=\"noResult\"\r\n\t\t\t\t\t\t\t\t\t>Digite no mínimo 3 caracteres para buscar</span\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<span slot=\"noOptions\"\r\n\t\t\t\t\t\t\t\t\t>Digite no mínimo 3 caracteres para buscar</span\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</v-select>\r\n\t\t\t\t\t\t\t<div v-if=\"$v.company.$error\" class=\"error-messages\">\r\n\t\t\t\t\t\t\t\t<span v-if=\"!$v.company.required\">O campo é obrigatório</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex'\r\nimport validation from '@/mixins/validations/scuba/company.js'\r\n\r\nexport default {\r\n\tname: 'Company',\r\n\tmixins: [validation],\r\n\tprops: {\r\n\t\tcompany_: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: null\r\n\t\t}\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tcompany: this.company_\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapState({\r\n\t\t\tcompanys: state => state.company.companys\r\n\t\t})\r\n\t},\r\n\tmethods: {\r\n\t\t...mapActions(['getCompanysByName', 'setCompany']),\r\n\t\tisValid() {\r\n\t\t\tthis.$emit('company-validation', this.$v.$invalid)\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#company-component-content {\r\n\twidth: 100%;\r\n\t.form-container {\r\n\t\tdisplay: flex;\r\n\t\tform {\r\n\t\t\twidth: 100%;\r\n\t\t\t.form-row {\r\n\t\t\t\t#company-internal-container {\r\n\t\t\t\t\t#company-container {\r\n\t\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\t}\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\talign-items: center;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n</style>\r\n"]}]}